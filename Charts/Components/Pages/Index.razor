@page "/"
@inject ApiService ApiService
@inject IJSRuntime Js
@rendermode InteractiveServer
@using Syncfusion.Blazor.DropDowns

<PageTitle>Blazor Weather App</PageTitle>

<script>
    window.registerViewportChangeCallback = (dotnetHelper) => {
        window.addEventListener('load', () => {
            dotnetHelper.invokeMethodAsync('OnResize', window.innerWidth, window.innerHeight);
        });
        window.addEventListener('resize', () => {
            dotnetHelper.invokeMethodAsync('OnResize', window.innerWidth, window.innerHeight);
        });
    }

    var lockResolver;
    if (navigator && navigator.locks && navigator.locks.request) {
        const promise = new Promise((res) => {
            lockResolver = res;
        });

        navigator.locks.request('unique_lock_name', { mode: "shared" }, () => {
            return promise;
        });
    }
</script>

<div class="input-section">
    <div class="control-wrapper">
        <SfComboBox TValue="string" TItem="WeatherStations" Placeholder="Select a station" DataSource="@StationData">
            <ComboBoxEvents TValue="string" TItem="WeatherStations" ValueChange="OnChange"/>
            <ComboBoxFieldSettings Value="ID" Text="Text"></ComboBoxFieldSettings>
        </SfComboBox>
    </div>
    Lat: <input type="text" @bind="Latitude" placeholder="Latitude" pattern="-?\d+(\.\d*)?" oninput="this.value = this.value.replace(/[^0-9\.]/g, '');">
    Long: <input type="text" @bind="Longitude" placeholder="Longitude" pattern="-?\d+(\.\d*)?" oninput="this.value = this.value.replace(/[^0-9\.]/g, '');">
    @if (_displayIcon)
    {
        <button @onclick="RefreshData" type="button" class="btn btn-primary" style="font-family: Lucida Sans Unicode;">&#x21bb;</button>
    }
    else
    {
        <button @onclick="RefreshData" type="button" class="btn btn-primary">Refresh</button>
    }
    @if (IsDataAvailable == false)
    {
        <br/>
        <span style="color: red">Please choose coordinates inside Germany.</span>
    }
</div>

<div class="container">
    <div class="item">
        <h3>Current Weather</h3>
        <h4>Station: @StationName</h4>
        <CurrentWeather CurrentWeatherData="CurrentWeather" Temperature="@Temperature" DewPoint="@DewPoint" Humidity="@Humidity" CloudCover="@CloudCover" Icon="@Icon" LastUpdatedTime="@LastUpdatedTime" />
    </div>

    <div class="item">
        <h3>Historical Data for @DateTime.Now.ToString("dd MMM")</h3>
        <HistoricalAverages Data="@HistoricalAverages"></HistoricalAverages>
    </div>
    
    <div class="item">
        @if (_climateChartVisible == false)
        {
            <button @onclick="GenerateClimateChart" type="button" class="btn btn-primary">Load Climate Chart</button>
        }
        else
        {
            if (HeatMapData == null)
            {
                <span>Loading climate data...</span>
            }
            else
            {
                <h3>Climate Chart for @StationName</h3>
                <HeatMap HeatMapData="@HeatMapData" TextOverflow="@TextOverflow" FontSize="@DataLabelFontSize" />
            }
        }
    </div>
    
    <div class="item">
        <h3>Mean Temperatures and Precipitation for @DateTime.Now.ToString("MMMM")</h3>
        <WeatherChart Temperatures="@Temperatures" Width="@Width" @rendermode="@RenderMode.InteractiveServer" />
    </div>
    
    <div class="get-source-code">
        <a href="https://github.com/extrasharp/BlazorWeatherApp" type="button" class="btn btn-primary">Source Code</a>
    </div>
</div>

@code {
     
}
